#name: Build and test
#on:
#  [push, pull_request]
#
#jobs:
#  golangci-lint-github-pr-review:
#    name: golangci-lint (github-pr-review)
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v2
#      - name: golangci-lint w/ github-pr-review
#        uses: reviewdog/action-golangci-lint@v2
#        with:
#          golangci_lint_flags: "--config=.golangci.yml"
#          tool_name: "golangci-lint-github-pr-review"
#          reporter: "github-pr-review"
#          fail_on_error: true
#
#  golangci-lint-github-check:
#    name: golangci-lint (github-check)
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v2
#      - name: golangci-lint w/ github-check
#        uses: reviewdog/action-golangci-lint@v2
#        with:
#          golangci_lint_flags: "--config=.golangci.yml"
#          tool_name: "golangci-lint-github-check"
#          level: info
#          reporter: "github-check"
#          fail_on_error: true
#
#  golangci-lint:
#    name: golangci-lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v2
#      - name: golangci-lint
#        uses: reviewdog/action-golangci-lint@v2
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          level: info
#          golangci_lint_flags: "--config=.golangci.yml"
#          fail_on_error: true
#
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Install Go
#        if: success()
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.20.x
#
#  test:
#    name: Testing
#    strategy:
#      matrix:
#        go-version: [ 1.20.x ]
#        platform: [ ubuntu-latest ]
#    runs-on: ${{ matrix.platform }}
#    steps:
#      - name: Install Go
#        if: success()
#        uses: actions/setup-go@v2
#        with:
#          go-version: ${{ matrix.go-version }}
#
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Run tests
#        run: |
#          go test -race ./...
#          go test -v ./... -covermode=count
#
#  coverage:
#    name: Coverage
#    runs-on: ubuntu-latest
#    steps:
#      - name: Install Go
#        if: success()
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.20.x
#
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Calc coverage
#        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
#
#      - name: Upload coverage to Codecov
#        run: bash <(curl -s https://codecov.io/bash)
#
#
