name: Build and test
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install review dog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          golint ./... | reviewdog -conf=.reviewdog.yml -reporter=github-check

      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -conf=.reviewdog.yml --diff="git diff master" -reporter=github-pr-check

  build:
    needs: lint
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

  test:
    needs: build
    name: Testing
    strategy:
      matrix:
        go-version: [ 1.17.x ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        run: |
          go test -race ./...
          go test -v ./... -covermode=count

  coverage:
    needs: build
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Calc coverage
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)


